# demo for using subworkflow - starts #

# main:
#   steps:
#     - first_msg:
#        call: custom_log
#        args: 
#           msg: "message1"

#     - second_msg:
#         call: custom_log
#         args: 
#             msg: "message2"         

# custom_log: 
#   params: [msg]
#   steps:
#     - log:
#         call: http.post
#         args:
#             url: https://logging.googleapis.com/v2/entries:write
#             auth:
#                 type: OAuth2
#             body:
#                 entries:
#                     - logName: ${"projects/" + sys.get_env("GOOGLE_CLOUD_PROJECT_ID") + "/logs/workflow_logger"}
#                       resource:
#                         type: "audited_resource"
#                         labels: {}
#                       textPayload: ${msg}

# demo for using subworkflow - ends #
# instead for using subworkflow - use in built sys.log in call #

#===============================================================#

# demo for writing file to gcs bucket - starts #

# main:
#     params: [input_param]
#     steps:
#     - write_to_gcs:
#         call: http.post
#         args:
#             url: ${"https://storage.googleapis.com/upload/storage/v1/b/" + string(input_param.bucketName) + "/o"}
#             auth:
#                 type: OAuth2
#             query:
#                 name: ${input_param.fileName}
#             body:
#                 name: Guillaume
#                 age: 26

# demo for writing file to gcs bucket - ends #

#===============================================#

main:
    params: [input_param]
    steps:
    - read_from_gcs:
        call: http.get
        args:
            url: ${"https://storage.googleapis.com/download/storage/v1/b/" + input_param.bucketName + "/o/" + input_param.fileName}
            auth:
                type: OAuth2
            query:
                alt: media
        result: json_data
    
    - output_data:
        return: ${json_data.body} 
